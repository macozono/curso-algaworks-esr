spring.datasource.url=jdbc:mysql://${DB_HOST:localhost:3306}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#Gerar arquivo SQL com todos os comandos DDL
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.session.store-type=none

# Indica que a deserialização deve falhar caso uma propriedade seja desconhecida
spring.jackson.deserialization.fail-on-unknown-properties=true
# Indica que a deserialização deve falhar caso uma propriedade esteja como ignorada
spring.jackson.deserialization.fail-on-ignored-properties=true
# Config indicando que a exceção deve ser lançada caso não haja um handler
spring.mvc.throw-exception-if-no-handler-found=true
# Desabilita arquivos estáticos da pasta static
spring.resources.add-mappings=false

# permitir que os nomes dos atributos sejam em snake case.
#spring.jackson.property-naming-strategy=SNAKE_CASE

#spring.servlet.multipart.max-file-size=20KB

spring.freemarker.settings.locale=pt_BR
server.compression.enabled=true

#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json
#algafood.jwt.keystore.jksLocation=classpath:keys/algafood.jks

#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123